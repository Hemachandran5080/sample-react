{"version":3,"sources":["authConfig.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","components/TodoForm.jsx","components/Todo.jsx","components/Todolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["loginRequest","scopes","SignInButton","instance","useMsal","Button","variant","className","onClick","loginRedirect","catch","e","console","error","handleLogin","SignOutButton","logoutPopup","handleLogout","PageLayout","props","isAuthenticated","useIsAuthenticated","Navbar","href","style","color","children","TodoForm","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","placeholder","onChange","name","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","Todolist","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.643ab32c.chunk.js","sourcesContent":["export const msalConfig = {\r\n    auth: {\r\n      clientId: \"66126d1b-41e5-4419-8883-80c820b40763\",\r\n      authority: \"https://login.microsoftonline.com/206c4bb1-e116-47f1-930e-a9802c3f3f9f\",\r\n      redirectUri: \"http://localhost:3000\",\r\n    },\r\n    cache: {\r\n      cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n      storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    }\r\n  };\r\n  \r\n  // Add scopes here for ID token to be used at Microsoft identity platform endpoints.\r\n  export const loginRequest = {\r\n   scopes: [\"User.Read\"]\r\n  };\r\n  \r\n  // Add the endpoints here for Microsoft Graph API services you'd like to use.\r\n  export const graphConfig = {\r\n      graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\r\n  };","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../authConfig\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogin(instance) {\r\n    instance.loginRedirect(loginRequest).catch(e => {\r\n        console.error(e);\r\n    });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will redirect the page to the login prompt\r\n */\r\nexport const SignInButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    return (\r\n        <Button variant=\"secondary\" className=\"ml-auto\" onClick={() => handleLogin(instance)}>Sign in using Redirect</Button>\r\n    );\r\n}","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogout(instance) {\r\n    instance.logoutPopup().catch(e => {\r\n        console.error(e);\r\n    });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for logout\r\n */\r\nexport const SignOutButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    return (\r\n        <Button variant=\"secondary\" className=\"ml-auto\" onClick={() => handleLogout(instance)}>Sign out using Popup</Button>\r\n    );\r\n}","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nimport { SignInButton } from \"./SignInButton\";\r\nimport { SignOutButton } from \"./SignOutButton\";\r\n\r\n/**\r\n * Renders the navbar component with a sign-in button if a user is not authenticated\r\n */\r\nexport const PageLayout = (props) => {\r\n    const isAuthenticated = useIsAuthenticated();\r\n\r\n    return (\r\n        <div>\r\n            <Navbar variant=\"dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">MSAL React Tutorial</a>\r\n                { isAuthenticated ? <SignOutButton /> : <SignInButton /> }\r\n            </Navbar>\r\n            <h5 style={{color:\"white\"}}><center>Welcome to the Microsoft Authentication Library For React Tutorial</center></h5>\r\n            <br />\r\n            <br />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react'\r\nimport TodoForm from \"./TodoForm\";\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport Todolist from './Todolist';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    \r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value:''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n        className={todo.isComplete ? 'todo-row complete' :'todo-row'} \r\n        key={index}\r\n        >\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n                />\r\n                <TiEdit \r\n                onClick={() => setEdit( {id: todo.id, value: todo.text} )}\r\n                className='edit-icon'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from \"./TodoForm\";\r\n\r\n\r\n\r\nfunction Todolist() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return; \r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo \r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist","// Value = VQQ4F0-Ea180B0C_GdJ7S_7.6ikmJv~M6i\n// Secret_Id = db61bdf0-d278-4925-a8d7-c31f8a5cefd3\n\nimport React, { useState } from \"react\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"./authConfig\";\nimport Button from \"react-bootstrap/Button\";\nimport { ProfileData } from \"./components/ProfileData\";\nimport { callMsGraph } from \"./graph\";\nimport Todolist from \"./components/Todolist\";\nimport \"./App.css\";\n\n\n\n\nfunction App() {\n    return (\n    <PageLayout>\n        <AuthenticatedTemplate>\n            {/* <ProfileContent /> */}\n            <Todolist />\n        </AuthenticatedTemplate>\n        <UnauthenticatedTemplate>\n            <p style={{color: \"white\"}}><center>You are not signed in! Please sign in.</center></p>\n        </UnauthenticatedTemplate>\n    </PageLayout>\n);\n}\n\n\nfunction ProfileContent() {\n  const { instance, accounts } = useMsal();\n  const [graphData, setGraphData] = useState(null);\n\n  const name = accounts[0] && accounts[0].name;\n\n  function RequestProfileData() {\n      const request = {\n          ...loginRequest,\n          account: accounts[0]\n      };\n\n      // Silently acquires an access token which is then attached to a request for Microsoft Graph data\n      instance.acquireTokenSilent(request).then((response) => {\n          callMsGraph(response.accessToken).then(response => setGraphData(response));\n      }).catch((e) => {\n          instance.acquireTokenPopup(request).then((response) => {\n              callMsGraph(response.accessToken).then(response => setGraphData(response));\n          });\n      });\n  }\n\n  return (\n      <>\n          <h5 className=\"card-title\">Welcome {name}</h5>\n          {graphData ? \n              <ProfileData graphData={graphData} />\n              :\n              <Button variant=\"secondary\" onClick={RequestProfileData}>Request Profile Information</Button>\n          }\n      </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n      <MsalProvider instance={msalInstance}>\n          <App />\n      </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}